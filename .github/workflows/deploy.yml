name: Deploy Blog System

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # 检查代码变更
  changes:
    runs-on: ubuntu-latest
    outputs:
      common: ${{ steps.filter.outputs.common }}
      user: ${{ steps.filter.outputs.user }}
      content: ${{ steps.filter.outputs.content }}
      admin: ${{ steps.filter.outputs.admin }}
      stat: ${{ steps.filter.outputs.stat }}
      gateway: ${{ steps.filter.outputs.gateway }}
      deploy-scripts: ${{ steps.filter.outputs.deploy-scripts }}
      configs: ${{ steps.filter.outputs.configs }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史用于比较
      
      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            common:
              - 'common/**'
              - 'go.work'
              - 'go.mod'
              - 'go.sum'
            
            user:
              - 'services/user/**'
              - 'common/**'
              - 'configs/user.yaml'
              - 'deploy/deploy-user-service.sh'
              - 'go.work'
              - 'go.mod'
              - 'go.sum'
            
            content:
              - 'services/content/**'
              - 'common/**'
              - 'configs/content.yaml'
              - 'deploy/deploy-content-service.sh'
              - 'go.work'
              - 'go.mod'
              - 'go.sum'
            
            admin:
              - 'services/admin/**'
              - 'common/**'
              - 'configs/admin.yaml'
              - 'deploy/deploy-admin-service.sh'
              - 'go.work'
              - 'go.mod'
              - 'go.sum'
            
            stat:
              - 'services/stat/**'
              - 'common/**'
              - 'configs/stat.yaml'
              - 'deploy/deploy-stat-service.sh'
              - 'go.work'
              - 'go.mod'
              - 'go.sum'
            
            gateway:
              - 'services/gateway/**'
              - 'common/**'
              - 'configs/gateway.yaml'
              - 'deploy/deploy-gateway-service.sh'
              - 'go.work'
              - 'go.mod'
              - 'go.sum'
            
            deploy-scripts:
              - 'deploy/**'
              - '.github/workflows/**'
            
            configs:
              - 'configs/**'
            
            docs:
              - 'README.md'
              - 'docs/**'
              - '*.md'

  # 部署公共模块
  deploy-common:
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.common == 'true' }}
    outputs:
      common-deployed: ${{ steps.deploy-common.outputs.success }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          cache: true
          cache-dependency-path: |
            **/go.sum
      - name: Go Work Init/Sync (monorepo)
        run: |
          if [ -f go.work ]; then
            go work sync
          else
            go work init ./common ./services/admin ./services/content ./services/gateway ./services/stat ./services/user
            go work sync
          fi
      # common 模块无需构建二进制

      - name: Deploy common module
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -euo pipefail
            exec 2>&1
            mkdir -p /opt/blog-system
            rm -rf /opt/blog-system/common

      - name: Upload common files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "common"
          target: /opt/blog-system

      - name: Upload deploy files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deploy/linux/*"
          target: /opt/blog-system
          overwrite: true

      - name: Verify common module
        uses: appleboy/ssh-action@v0.1.5
        id: deploy-common
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            exec 2>&1
            cd /opt/blog-system/common
            if [ -f "go.mod" ]; then
              echo "Common module deployed successfully"
              echo "::set-output name=success::true"
            else
              echo "Common module deployment failed"
              exit 1
            fi

  # 部署用户服务
  deploy-user-service:
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.user == 'true' }}
    needs: [changes, deploy-common]
    outputs:
      user-deployed: ${{ steps.deploy-user.outputs.success }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          cache: true
          cache-dependency-path: |
            **/go.sum
      - name: Go Work Init/Sync (monorepo)
        run: |
          if [ -f go.work ]; then
            go work sync
          else
            go work init ./common ./services/admin ./services/content ./services/gateway ./services/stat ./services/user
            go work sync
          fi
      - name: Build user service binary (linux/amd64)
        run: |
          set -euo pipefail
          cd services/user
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w" -o user-service .
      # 由远端服务器本地构建，CI 不做交叉编译

      - name: Deploy user service
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -euo pipefail
            exec 2>&1
            mkdir -p /opt/blog-system
            systemctl stop user-service || true
            rm -rf /opt/blog-system/services/user /opt/blog-system/configs/user.yaml

      - name: Upload user service files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "services/user,user-service,configs/*.yaml,deploy/deploy-user-service.sh"
          target: /opt/blog-system
          overwrite: true

      - name: Execute user service deployment
        uses: appleboy/ssh-action@v0.1.5
        id: deploy-user
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: BLOG_PASSWORD
          script: |
            set -euo pipefail
            exec 2>&1
            cd /opt/blog-system
            export BLOG_PASSWORD="${{ secrets.BLOG_PASSWORD }}"
            chmod +x deploy/deploy-user-service.sh
            ./deploy/deploy-user-service.sh
            echo "::set-output name=success::true"

      - name: Verify user service
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            exec 2>&1
            sleep 10
            if systemctl is-active --quiet user-service; then
              echo "User service deployed successfully"
            else
              echo "User service deployment failed"
              systemctl status user-service --no-pager -l
              exit 1
            fi

  # 部署内容服务（依赖 common，与 user 并行）
  deploy-content-service:
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.content == 'true' }}
    needs: [changes, deploy-common]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          cache: true
          cache-dependency-path: |
            **/go.sum
      - name: Go Work Init/Sync (monorepo)
        run: |
          if [ -f go.work ]; then
            go work sync
          else
            go work init ./common ./services/admin ./services/content ./services/gateway ./services/stat ./services/user
            go work sync
          fi
      - name: Build content service binary (linux/amd64)
        run: |
          set -euo pipefail
          cd services/content
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w" -o content-service .
      - name: Prepare remote
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            exec 2>&1
            mkdir -p /opt/blog-system
            systemctl stop content-service || true
            rm -rf /opt/blog-system/services/content /opt/blog-system/configs/content.yaml
      - name: Upload content service files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "services/content,content-service,configs/*.yaml,deploy/deploy-content-service.sh"
          target: /opt/blog-system
          overwrite: true
      - name: Execute content service deployment
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: BLOG_PASSWORD
          script: |
            set -euo pipefail
            exec 2>&1
            cd /opt/blog-system
            export BLOG_PASSWORD='${{ secrets.BLOG_PASSWORD }}'
            chmod +x deploy/deploy-content-service.sh
            ./deploy/deploy-content-service.sh

  # 部署管理服务（可与其他并行，作为健康检查/后台入口）
  deploy-admin-service:
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.admin == 'true' }}
    needs: [changes, deploy-user-service, deploy-content-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          cache: true
          cache-dependency-path: |
            **/go.sum
      - name: Go Work Init/Sync (monorepo)
        run: |
          if [ -f go.work ]; then
            go work sync
          else
            go work init ./common ./services/admin ./services/content ./services/gateway ./services/stat ./services/user
            go work sync
          fi
      - name: Build admin service binary (linux/amd64)
        run: |
          set -euo pipefail
          cd services/admin
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w" -o admin-service .
      - name: Prepare remote
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            exec 2>&1
            mkdir -p /opt/blog-system
            systemctl stop admin-service || true
            rm -rf /opt/blog-system/services/admin
      - name: Upload admin service files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "services/admin,admin-service,configs/*.yaml,deploy/deploy-admin-service.sh"
          target: /opt/blog-system
          overwrite: true
      - name: Execute admin service deployment
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: BLOG_PASSWORD
          script: |
            set -euo pipefail
            exec 2>&1
            cd /opt/blog-system
            export BLOG_PASSWORD='${{ secrets.BLOG_PASSWORD }}'
            chmod +x deploy/deploy-admin-service.sh
            ./deploy/deploy-admin-service.sh

  # 部署统计服务（可并行，依赖 common）
  deploy-stat-service:
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.stat == 'true' }}
    needs: [changes, deploy-content-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          cache: true
          cache-dependency-path: |
            **/go.sum
      - name: Go Work Init/Sync (monorepo)
        run: |
          if [ -f go.work ]; then
            go work sync
          else
            go work init ./common ./services/admin ./services/content ./services/gateway ./services/stat ./services/user
            go work sync
          fi
      - name: Build stat service binary (linux/amd64)
        run: |
          set -euo pipefail
          cd services/stat
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w" -o stat-service .
      # 由远端服务器本地构建，CI 不做交叉编译
      - name: Prepare remote
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            exec 2>&1
            mkdir -p /opt/blog-system
            systemctl stop stat-service || true
            rm -rf /opt/blog-system/services/stat /opt/blog-system/configs/stat.yaml
      - name: Upload stat service files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "services/stat,stat-service,configs/*.yaml,deploy/deploy-stat-service.sh"
          target: /opt/blog-system
          overwrite: true
      - name: Execute stat service deployment
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            exec 2>&1
            cd /opt/blog-system
            chmod +x deploy/deploy-stat-service.sh
            ./deploy/deploy-stat-service.sh

  # 部署网关服务
  deploy-gateway-service:
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.gateway == 'true' }}
    needs: [changes, deploy-admin-service, deploy-stat-service]
    outputs:
      gateway-deployed: ${{ steps.deploy-gateway.outputs.success }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          cache: true
          cache-dependency-path: |
            **/go.sum
      - name: Build gateway service binary (linux/amd64)
        run: |
          set -euo pipefail
          cd services/gateway
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w" -o gateway-service .

      - name: Check user service dependency
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -euo pipefail
            exec 2>&1
            # 检查用户服务是否运行
            if ! systemctl is-active --quiet user-service; then
              echo "User service is not running. Please deploy user service first."
              exit 1
            fi
            
            # 检查用户服务端口
            if ! netstat -tlnp | grep -q ":8001"; then
              echo "User service port 8001 is not listening. Please check user service."
              exit 1
            fi
            
            echo "User service dependency check passed"

      - name: Deploy gateway service
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -euo pipefail
            exec 2>&1
            mkdir -p /opt/blog-system
            systemctl stop gateway-service || true
            rm -rf /opt/blog-system/services/gateway /opt/blog-system/configs/gateway.yaml

      - name: Upload gateway service files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "services/gateway,gateway-service,configs/*.yaml,deploy/deploy-gateway-service.sh"
          target: /opt/blog-system
          overwrite: true

      - name: Execute gateway service deployment
        uses: appleboy/ssh-action@v0.1.5
        id: deploy-gateway
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: BLOG_PASSWORD
          script: |
            set -euo pipefail
            exec 2>&1
            cd /opt/blog-system
            export BLOG_PASSWORD="${{ secrets.BLOG_PASSWORD }}"
            chmod +x deploy/deploy-gateway-service.sh
            ./deploy/deploy-gateway-service.sh
            echo "::set-output name=success::true"

      - name: Verify gateway service
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            exec 2>&1
            sleep 10
            if systemctl is-active --quiet gateway-service; then
              echo "Gateway service deployed successfully"
            else
              echo "Gateway service deployment failed"
              systemctl status gateway-service --no-pager -l
              exit 1
            fi

  # 部署完成通知
  deployment-summary:
    runs-on: ubuntu-latest
    needs: [changes, deploy-common, deploy-user-service, deploy-content-service, deploy-admin-service, deploy-stat-service, deploy-gateway-service]
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo "## 🚀 部署完成摘要" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 变更检测结果" >> $GITHUB_STEP_SUMMARY
          echo "- **Common**: ${{ needs.changes.outputs.common == 'true' && '✅ 已部署' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **User Service**: ${{ needs.changes.outputs.user == 'true' && '✅ 已部署' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Content Service**: ${{ needs.changes.outputs.content == 'true' && '✅ 已部署' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Admin Service**: ${{ needs.changes.outputs.admin == 'true' && '✅ 已部署' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Stat Service**: ${{ needs.changes.outputs.stat == 'true' && '✅ 已部署' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Gateway Service**: ${{ needs.changes.outputs.gateway == 'true' && '✅ 已部署' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔧 其他变更" >> $GITHUB_STEP_SUMMARY
          echo "- **部署脚本**: ${{ needs.changes.outputs.deploy-scripts == 'true' && '📝 已更新' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **配置文件**: ${{ needs.changes.outputs.configs == 'true' && '⚙️ 已更新' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **文档**: ${{ needs.changes.outputs.docs == 'true' && '📚 已更新' || '⏭️ 无变更' }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.changes.outputs.common }}" == "true" ] || [ "${{ needs.changes.outputs.user }}" == "true" ] || [ "${{ needs.changes.outputs.content }}" == "true" ] || [ "${{ needs.changes.outputs.admin }}" == "true" ] || [ "${{ needs.changes.outputs.stat }}" == "true" ] || [ "${{ needs.changes.outputs.gateway }}" == "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🎯 部署状态" >> $GITHUB_STEP_SUMMARY
            echo "- **Common**: ${{ needs.deploy-common.outputs.common-deployed == 'true' && '✅ 成功' || '❌ 失败' }}" >> $GITHUB_STEP_SUMMARY
            echo "- **User Service**: ${{ needs.deploy-user-service.outputs.user-deployed == 'true' && '✅ 成功' || '❌ 失败' }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Gateway Service**: ${{ needs.deploy-gateway-service.outputs.gateway-deployed == 'true' && '✅ 成功' || '❌ 失败' }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🎯 部署状态" >> $GITHUB_STEP_SUMMARY
            echo "**⏭️ 无服务需要部署**" >> $GITHUB_STEP_SUMMARY
          fi 
